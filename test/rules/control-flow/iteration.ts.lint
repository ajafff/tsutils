export function test() {
                       ~ [0]
    const condition = true;

    for (;;)
    ~~~ [0]
        return;
        ~~~~~~ [0]

    outer: while (true) {
                        ~ [0]
        for (const e of [])
            return;
            ~~~~~~ [0]
        break;
        ~~~~~ [0]
    }

    outer: while (true) {
    ~~~~~ [0]
           ~~~~~ [0]
                        ~ [0]
        return;
        ~~~~~~ [0]
    }

    for (const key in {}) {
                          ~ [0]
        return;
        ~~~~~~ [0]
    }

    outer: while (condition) {
                             ~ [0]
        do {
        ~~ [0]
           ~ [0]
            continue outer;
            ~~~~~~~~ [0]
        } while (false)
    }

    outer: while (true) {
           ~~~~~ [0]
                        ~ [0]
        do {
        ~~ [0]
           ~ [0]
            continue outer;
            ~~~~~~~~ [0]
        } while (false)
    }

    outer: while (false) {
                         ~ [0]
        return;
        ~~~~~~ [0]
    }

    outer: for (; true; ) {
        inner: while (true) {
               ~~~~~ [0]
                            ~ [0]
            if (condition)
                break outer;
                ~~~~~ [0]
            break inner;
            ~~~~~ [0]
        }
    }

    outer: for (; true; ) {
           ~~~ [0]
                          ~ [0]
        inner: while (true) {
        ~~~~~ [0]
               ~~~~~ [0]
                            ~ [0]
            if (true)
            ~~ [0]
                break outer;
                ~~~~~ [0]
            break inner;
            ~~~~~ [0]
        }
    }
}

[0]: control flow end
